openapi: 3.0.3
info:
  title: Bank Cards Management API
  description: API для управления банковскими картами и пользователями
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Development server
tags:
  - name: Аутентификация
    description: API для регистрации, входа и выхода
  - name: Банковские карты
    description: API для управления банковскими картами
  - name: Транзакции
    description: API для управления транзакциями между картами
  - name: Пользователи
    description: API для администратора - управление пользователями
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required:
        - "email"
        - "password"
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
    TokenDTO:
      type: object
      properties:
        token:
          type: string
    CreateUserRequest:
      type: object
      required:
        - "name"
        - "email"
        - "password"
      properties:
        name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
    CreateUserResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
        isActive:
          type: boolean
    GetAllUsersResponseDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
        size:
          type: integer
    CreateCardRequestDTO:
      type: object
      required:
        - "cardHolder"
        - "expiryDate"
        - "userId"
      properties:
        cardHolder:
          type: string
          maxLength: 100
        expiryDate:
          type: string
          format: date
        userId:
          type: integer
          format: int64
    CardDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardNumber:
          type: string
        cardHolder:
          type: string
        expiryDate:
          type: string
          format: date
        status:
          type: string
          enum: [ ACTIVE, BLOCKED, EXPIRED ]
        balance:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        userId:
          type: integer
          format: int64
    GetAllCardsResponseDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CardDTO'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
        size:
          type: integer
    SetBalanceRequestDTO:
      type: object
      required:
        - "newBalance"
      properties:
        newBalance:
          type: number
          format: double
          minimum: 0.0
          description: "Новый точный баланс карты"
    CreateTransactionRequestDTO:
      type: object
      required:
        - "fromCardId"
        - "toCardId"
        - "amount"
      properties:
        fromCardId:
          type: integer
          format: int64
        toCardId:
          type: integer
          format: int64
        amount:
          type: number
          format: double
          minimum: 0.01
        description:
          type: string
          maxLength: 255
    TransactionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fromCardId:
          type: integer
          format: int64
        toCardId:
          type: integer
          format: int64
        amount:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        description:
          type: string
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
    MessageResponseDTO:
      type: object
      properties:
        message:
          type: string
paths:
  /api/v1/auth/signup:
    post:
      tags:
        - Аутентификация
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponseDTO'
        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Пользователь с таким email уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/auth/login:
    post:
      tags:
        - Аутентификация
      summary: Вход в систему
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDTO'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/auth/logout:
    post:
      tags:
        - Аутентификация
      summary: Выход из системы
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный выход
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/users:
    get:
      tags:
        - Пользователи
      summary: Получает всех пользователей
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Успешный ответ со списком всех пользователей
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllUsersResponseDTO'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Нет прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/users/{userId}:
    delete:
      tags:
        - Пользователи
      summary: Удаляет пользователя
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Успешное удаление - пустой ответ
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Нет прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/users/block/{userId}:
    patch:
      tags:
        - Пользователи
      summary: Блокирует пользователя
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешная блокировка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Нет прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/users/unblock/{userId}:
    patch:
      tags:
        - Пользователи
      summary: Разблокирует пользователя
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешная разблокировка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDTO'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Нет прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/cards:
    get:
      tags:
        - Банковские карты
      summary: Получить все карты пользователя или все карты (для ADMIN)
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          schema:
            type: string
            enum: [ ACTIVE, BLOCKED, EXPIRED ]
        - name: balanceMoreThan
          in: query
          schema:
            type: number
        - name: balanceLessThan
          in: query
          schema:
            type: number
        - name: cardHolder
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Список карт получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllCardsResponseDTO'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Банковские карты
      summary: Создать новую карту (только ADMIN)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardRequestDTO'
      responses:
        '201':
          description: Карта создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDTO'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Нет прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/cards/{cardId}:
    delete:
      tags:
        - Банковские карты
      summary: Удалить карту (только ADMIN)
      security:
        - bearerAuth: []
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Карта удалена
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Нет прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Карта не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/cards/{cardId}/block:
    patch:
      tags:
        - Банковские карты
      summary: Заблокировать карту
      security:
        - bearerAuth: []
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Карта заблокирована
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDTO'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Карта не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/cards/{cardId}/activate:
    patch:
      tags:
        - Банковские карты
      summary: Активировать карту (только ADMIN)
      security:
        - bearerAuth: []
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Карта активирована
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDTO'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Нет прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Карта не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/cards/{cardId}/balance:
    patch:
      tags:
        - Банковские карты
      summary: Установить точный баланс карты (только ADMIN)
      security:
        - bearerAuth: []
      parameters:
        - name: cardId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetBalanceRequestDTO'
      responses:
        '200':
          description: Баланс успешно установлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDTO'
        '400':
          description: Некорректные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Карта не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/transactions:
    get:
      tags:
        - Транзакции
      summary: Получить транзакции пользователя
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список транзакций получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionDTO'
                  totalPages:
                    type: integer
                  totalElements:
                    type: integer
                    format: int64
                  number:
                    type: integer
                  size:
                    type: integer
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Транзакции
      summary: Создать транзакцию между своими картами
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequestDTO'
      responses:
        '201':
          description: Транзакция создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTO'
        '400':
          description: Недостаточно средств или карта заблокирована
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Карта не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'